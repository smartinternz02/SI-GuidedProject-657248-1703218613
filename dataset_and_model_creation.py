# -*- coding: utf-8 -*-
"""Dataset_and_model_creation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xWHaEZQrXSZVsq69gMk7k2bjTOLOA-68
"""

!pip install kaggle

"""# New Section"""

!mkdir ~/.kaggle

! cp kaggle.json ~/.kaggle/

! chmod 600 ~/.kaggle/kaggle.json

! kaggle datasets download -d arbethi/diabetic-retinopathy-level-detection

!unzip diabetic-retinopathy-level-detection.zip

imageSize=[299,299]

trainPath = r"/content/preprocessed dataset/preprocessed dataset/training"

testPath = r"/content/preprocessed dataset/preprocessed dataset/testing"

from tensorflow.keras.layers import Dense, Flatten, Input

from tensorflow.keras.models import Model

from tensorflow.keras.preprocessing import image

from tensorflow.keras.applications.xception import Xception, preprocess_input

from glob import glob

import numpy as np

import matplotlib.pyplot as plt

from keras.preprocessing.image import ImageDataGenerator

train_datagen=ImageDataGenerator(rescale=1./255, shear_range=0.2,zoom_range=0.2,horizontal_flip=True)

test_datagen=ImageDataGenerator(rescale=1./255)

training_set=train_datagen.flow_from_directory('/content/preprocessed dataset/preprocessed dataset/training',
                                               target_size=(299,299),
                                               batch_size=32,
                                               class_mode='categorical')

test_set=test_datagen.flow_from_directory('/content/preprocessed dataset/preprocessed dataset/testing',
                                               target_size=(299,299),
                                               batch_size=32,
                                               class_mode='categorical')

xception=Xception(input_shape=imageSize+[3],weights='imagenet', include_top= False)

for layer in xception.layers:
  layer.trainable=False

x=Flatten()(xception.output)

prediction=Dense(5,activation='softmax')(x)

model=Model(inputs=xception.input,outputs=prediction)

model.summary()

model.compile(
    loss='categorical_crossentropy',
    optimizer='adam',
    metrics=['accuracy']
)

r=model.fit_generator(
    training_set,
    validation_data=test_set,
    epochs=30,
    steps_per_epoch=len(training_set)//23,
    validation_steps=len(test_set)//23
)

!pip install watson-machine-learning-client --upgrade

model.save('Updated Xception-diabetic-retinopathy.h5')